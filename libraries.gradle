/*
 * A program to automatically trade cryptocurrencies.
 * Copyright (C) 2020 Tomas Skalicky
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

ext {
    versions = [
            activation          : '1.1.1',
            annotations         : '20.1.0',
            archunit_junit5     : '0.17.0',
            commons_collections4: '4.4',
            commons_logging     : '1.2',
            gradle              : '7.0',
            guava               : '30.1.1-jre',
            jacoco_tool         : '0.8.6',
            jcommander          : '1.81',
            spring_boot         : '2.4.4',
            wiremock            : '2.27.2',
    ]

    // Not called "libraries" due to name collision.
    libs = [
            // Not managed by any imported BOMs.
            activation               : 'javax.activation:activation',

            // Not managed by any imported BOMs.
            annotations              : 'org.jetbrains:annotations',

            // Not managed by any imported BOMs.
            // See https://github.com/TNG/ArchUnit
            archunit_junit5_api      : 'com.tngtech.archunit:archunit-junit5-api',

            // Not managed by any imported BOMs.
            archunit_junit5_engine   : 'com.tngtech.archunit:archunit-junit5-engine',

            // Managed by Spring BOM.
            assertj_core             : 'org.assertj:assertj-core',

            // Not managed by any imported BOMs.
            commons_collections4     : 'org.apache.commons:commons-collections4',

            // Managed by Spring BOM.
            commons_lang3            : 'org.apache.commons:commons-lang3',

            // Not managed by any imported BOMs.
            commons_logging          : 'commons-logging:commons-logging',

            // Not managed by any imported BOMs.
            // See https://github.com/google/guava
            guava                    : 'com.google.guava:guava',

            // Not managed by any imported BOMs.
            httpclient               : 'org.apache.httpcomponents:httpclient',

            // Managed by Jackson BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-bom/2.12.0/jackson-bom-2.12.0.pom
            jackson_core             : 'com.fasterxml.jackson.core:jackson-core',

            // Managed by Jackson BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-bom/2.12.0/jackson-bom-2.12.0.pom
            jackson_databind         : 'com.fasterxml.jackson.core:jackson-databind',

            // Managed by Jackson BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/com/fasterxml/jackson/jackson-bom/2.12.0/jackson-bom-2.12.0.pom
            jackson_jsr310           : 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310',

            // Not managed by any imported BOMs.
            // See https://github.com/cbeust/jcommander
            jcommander               : 'com.beust:jcommander',

            // Managed by Jersey BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/org/glassfish/jersey/jersey-bom/3.0.0/jersey-bom-3.0.0.pom
            jersey_client            : 'org.glassfish.jersey.core:jersey-client',

            // Managed by Jersey BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/org/glassfish/jersey/jersey-bom/3.0.0/jersey-bom-3.0.0.pom
            jersey_common            : 'org.glassfish.jersey.core:jersey-common',

            // Managed by Jersey BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/org/glassfish/jersey/jersey-bom/3.0.0/jersey-bom-3.0.0.pom
            jersey_hk2               : 'org.glassfish.jersey.inject:jersey-hk2',

            // Managed by Jersey BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/org/glassfish/jersey/jersey-bom/3.0.0/jersey-bom-3.0.0.pom
            jersey_media_json_jackson: 'org.glassfish.jersey.media:jersey-media-json-jackson',

            // Managed by JUnit BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/org/junit/junit-bom/5.7.0/junit-bom-5.7.0.pom
            junit_jupiter_api        : 'org.junit.jupiter:junit-jupiter-api',

            // Managed by JUnit BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/org/junit/junit-bom/5.7.0/junit-bom-5.7.0.pom
            junit_jupiter_engine     : 'org.junit.jupiter:junit-jupiter-engine',

            // Managed by Log4J BOM which version is managed by Spring BOM.
            // See https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-bom/2.14.0/log4j-bom-2.14.0.pom
            log4j_slf4j_impl         : 'org.apache.logging.log4j:log4j-slf4j-impl',

            // Managed by Spring BOM.
            mockito_core             : 'org.mockito:mockito-core',

            // Managed by Spring BOM.
            slf4j_api                : 'org.slf4j:slf4j-api',

            // Not managed by any imported BOMs.
            wiremock                 : 'com.github.tomakehurst:wiremock',
    ]
}
