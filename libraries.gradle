/*
 * A program to automatically trade cryptocurrencies.
 * Copyright (C) 2020 Tomas Skalicky
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

ext {
    versions = [
            activation            : '1.1.1',
            annotations           : '20.1.0',
            archunit_junit5       : '0.14.1',
            assertj_core          : '3.18.1',
            commons_collections4  : '4.4',
            commons_lang3         : '3.6',
            gradle_versions_plugin: '0.36.0',
            guava                 : '28.2-jre',
            httpclient            : '4.5.8',
            jackson               : '2.11.3',
            jcommander            : '1.78',
            jersey                : '2.31',
            jsr305                : '3.0.2',
            junit_jupiter         : '5.7.0',
            log4j_slf4j_impl      : '2.14.0',
            mockito_core          : '3.6.0',
            slf4j_api             : '1.7.30',
            wiremock              : '2.27.2',
    ]

    // Not called "libraries" due to name collision.
    libs = [
            activation               : "javax.activation:activation:${versions.activation}",
            annotations              : "org.jetbrains:annotations:${versions.annotations}",
            archunit_junit5_api      : "com.tngtech.archunit:archunit-junit5-api:${versions.archunit_junit5}",
            archunit_junit5_engine   : "com.tngtech.archunit:archunit-junit5-engine:${versions.archunit_junit5}",
            assertj_core             : "org.assertj:assertj-core:${versions.assertj_core}",
            commons_collections4     : "org.apache.commons:commons-collections4:${versions.commons_collections4}",
            commons_lang3            : "org.apache.commons:commons-lang3:${versions.commons_lang3}",
            guava                    : "com.google.guava:guava:${versions.guava}",
            httpclient               : "org.apache.httpcomponents:httpclient:${versions.httpclient}",
            jackson_annotations      : "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}",
            jackson_core             : "com.fasterxml.jackson.core:jackson-core:${versions.jackson}",
            jackson_databind         : "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}",
            jackson_jsr310           : "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}",
            jcommander               : "com.beust:jcommander:${versions.jcommander}",
            jersey_client            : "org.glassfish.jersey.core:jersey-client:${versions.jersey}",
            jersey_common            : "org.glassfish.jersey.core:jersey-common:${versions.jersey}",
            jersey_hk2               : "org.glassfish.jersey.inject:jersey-hk2:${versions.jersey}",
            jersey_media_json_jackson: "org.glassfish.jersey.media:jersey-media-json-jackson:${versions.jersey}",
            junit_jupiter_api        : "org.junit.jupiter:junit-jupiter-api:${versions.junit_jupiter}",
            junit_jupiter_engine     : "org.junit.jupiter:junit-jupiter-engine:${versions.junit_jupiter}",
            log4j_slf4j_impl         : "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j_slf4j_impl}",
            mockito_core             : "org.mockito:mockito-core:${versions.mockito_core}",
            slf4j_api                : "org.slf4j:slf4j-api:${versions.slf4j_api}",
            wiremock                 : "com.github.tomakehurst:wiremock:${versions.wiremock}",
    ]

    lib_groups = [
            junit_jupiter   : [
                    libs.junit_jupiter_api,
                    libs.junit_jupiter_engine,
            ],
            slf4j_with_log4j: [
                    libs.log4j_slf4j_impl,
                    libs.slf4j_api,
            ],
    ]

    // Not called "plugins" due to name collision.
    plug_ins = [
            gradle_versions_plugin: "com.github.ben-manes:gradle-versions-plugin:${versions.gradle_versions_plugin}",
    ]
}
